apply plugin: 'com.android.library'
apply plugin: 'de.mobilej.unmock'
def org = "queueit"

android {
    compileSdkVersion 30
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 1
        versionName "2.0.23"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.28.2'

    api 'com.squareup.okhttp3:okhttp:3.3.1'
    api 'com.android.support:appcompat-v7:26.1.0'
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'com.queue_it.androidsdk'

    publishedGroupId = 'com.queue_it.androidsdk'
    libraryName = 'com.queue_it.androidsdk'
    artifact = 'library'

    libraryDescription = 'Android SDK to integrate with Queue-it'

    siteUrl = "https://github.com/${org}/android-webui-sdk"
    gitUrl = "https://github.com/${org}/android-webui-sdk.git"

    libraryVersion = android.defaultConfig.versionName

    licenseName = 'MIT'
    licenseUrl = 'MIT'
    allLicenses = ["MIT"]
}

apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                name libraryName
                description libraryDescription
                url siteUrl

                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

apply plugin: 'com.jfrog.bintray'

version = libraryVersion

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apiKey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = "${org}"
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true
            }
        }
    }
}

unMock {
    keepStartingWith "android.net.Uri"
    keepAndRename "java.nio.charset.Charsets" to "xjava.nio.charset.Charsets"
    keepStartingWith "libcore."
}